Index: src/video/sdl_texture.hpp
===================================================================
--- src/video/sdl_texture.hpp	(revision 5395)
+++ src/video/sdl_texture.hpp	(working copy)
@@ -21,6 +21,7 @@
 #define __SDL_TEXTURE_HPP__
 
 #include <config.h>
+#include <algorithm>
 
 #include <SDL.h>
 
Index: src/console.hpp
===================================================================
--- src/console.hpp	(revision 5395)
+++ src/console.hpp	(working copy)
@@ -22,6 +22,7 @@
 
 #include <list>
 #include <map>
+#include <memory>
 #include <vector>
 #include <string>
 #include <sstream>
Index: src/statistics.cpp
===================================================================
--- src/statistics.cpp	(revision 5395)
+++ src/statistics.cpp	(working copy)
@@ -152,15 +152,15 @@ Statistics::draw_worldmap_info(DrawingContext& con
   switch (display_stat)
   {
     case 0:
-      snprintf(caption_buf, sizeof(caption_buf), _("Max coins collected:"));
+      strncpy(caption_buf, _("Max coins collected:"), sizeof(caption_buf));
       snprintf(stat_buf, sizeof(stat_buf), "%d/%d", coins, total_coins);
       break;
     case 1:
-      snprintf(caption_buf, sizeof(caption_buf), _("Max fragging:"));
+      strncpy(caption_buf, _("Max fragging:"), sizeof(caption_buf));
       snprintf(stat_buf, sizeof(stat_buf), "%d/%d", badguys, total_badguys);
       break;
     case 2:
-      snprintf(caption_buf, sizeof(caption_buf), _("Min time needed:"));
+      strncpy(caption_buf, _("Min time needed:"), sizeof(caption_buf));
       {
 	int csecs = (int)(time * 100);
 	int mins = (int)(csecs / 6000);
@@ -169,7 +169,7 @@ Statistics::draw_worldmap_info(DrawingContext& con
       }
       break;
     case 3:
-      snprintf(caption_buf, sizeof(caption_buf), _("Max secrets found:"));
+      strncpy(caption_buf, _("Max secrets found:"), sizeof(caption_buf));
       snprintf(stat_buf, sizeof(stat_buf), "%d/%d", secrets, total_secrets);
       break;
     default:
Index: src/addon_manager.cpp
===================================================================
--- src/addon_manager.cpp	(revision 5395)
+++ src/addon_manager.cpp	(working copy)
@@ -25,6 +25,7 @@
 #include <physfs.h>
 #include <sys/stat.h>
 #include <stdio.h>
+#include <stdlib.h>
 #include "addon_manager.hpp"
 #include "config.h"
 #include "log.hpp"
Index: src/main.cpp
===================================================================
--- src/main.cpp	(revision 5395)
+++ src/main.cpp	(working copy)
@@ -239,8 +239,7 @@ static void init_physfs(const char* argv0)
 static void print_usage(const char* argv0)
 {
   fprintf(stderr, _("Usage: %s [OPTIONS] [LEVELFILE]\n\n"), argv0);
-  fprintf(stderr,
-          _("Options:\n"
+  fputs(_("Options:\n"
             "  -f, --fullscreen             Run in fullscreen mode\n"
             "  -w, --window                 Run in window mode\n"
             "  -g, --geometry WIDTHxHEIGHT  Run SuperTux in given resolution\n"
@@ -255,7 +254,7 @@ static void print_usage(const char* argv0)
             "  --no-show-fps                Do not display framerate in levels\n"
             "  --record-demo FILE LEVEL     Record a demo to FILE\n"
             "  --play-demo FILE LEVEL       Play a recorded demo\n"
-            "\n"));
+            "\n"), stderr);
 }
 
 /**
@@ -431,7 +430,7 @@ void init_video()
 
   // set icon
   #ifdef MACOSX
-  char* icon_fname = "images/engine/icons/supertux-256x256.png";
+  const char* icon_fname = "images/engine/icons/supertux-256x256.png";
   #else
   const char* icon_fname = "images/engine/icons/supertux.xpm";
   #endif
Index: src/squirrel/include/squirrel.h
===================================================================
--- src/squirrel/include/squirrel.h	(revision 5395)
+++ src/squirrel/include/squirrel.h	(working copy)
@@ -42,16 +42,19 @@ extern "C" {
 #ifdef _SQ64
 #ifdef _MSC_VER
 typedef __int64 SQInteger;
+#define _SC_INT_FMT "%Id"
 typedef unsigned __int64 SQUnsignedInteger;
 typedef unsigned __int64 SQHash; /*should be the same size of a pointer*/
 #else
 typedef long SQInteger;
+#define _SC_INT_FMT "%ld"
 typedef unsigned long SQUnsignedInteger;
 typedef unsigned long SQHash; /*should be the same size of a pointer*/
 #endif
 typedef int SQInt32; 
 #else 
 typedef int SQInteger;
+#define _SC_INT_FMT "%d"
 typedef int SQInt32; /*must be 32 bits(also on 64bits processors)*/
 typedef unsigned int SQUnsignedInteger;
 typedef unsigned int SQHash; /*should be the same size of a pointer*/
Index: src/squirrel/sqstdlib/sqstdstream.h
===================================================================
--- src/squirrel/sqstdlib/sqstdstream.h	(revision 5395)
+++ src/squirrel/sqstdlib/sqstdstream.h	(working copy)
@@ -14,5 +14,5 @@ SQInteger _stream_eos(HSQUIRRELVM v);
 SQInteger _stream_flush(HSQUIRRELVM v);
 
 #define _DECL_STREAM_FUNC(name,nparams,typecheck) {_SC(#name),_stream_##name,nparams,typecheck}
-SQRESULT declare_stream(HSQUIRRELVM v,SQChar* name,SQUserPointer typetag,SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals);
+SQRESULT declare_stream(HSQUIRRELVM v,const SQChar* name,SQUserPointer typetag,const SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals);
 #endif /*_SQSTD_STREAM_H_*/
Index: src/squirrel/sqstdlib/sqstdstream.cpp
===================================================================
--- src/squirrel/sqstdlib/sqstdstream.cpp	(revision 5395)
+++ src/squirrel/sqstdlib/sqstdstream.cpp	(working copy)
@@ -277,7 +277,7 @@ void init_streamclass(HSQUIRRELVM v)
 	sq_pop(v,1);
 }
 
-SQRESULT declare_stream(HSQUIRRELVM v,SQChar* name,SQUserPointer typetag,SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals)
+SQRESULT declare_stream(HSQUIRRELVM v,const SQChar* name,SQUserPointer typetag,const SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals)
 {
 	if(sq_gettype(v,-1) != OT_TABLE)
 		return sq_throwerror(v,_SC("table expected"));
Index: src/squirrel/sqstdlib/sqstdrex.cpp
===================================================================
--- src/squirrel/sqstdlib/sqstdrex.cpp	(revision 5395)
+++ src/squirrel/sqstdlib/sqstdrex.cpp	(working copy)
@@ -483,7 +483,7 @@ static const SQChar *sqstd_rex_matchnode(SQRex* ex
 			return cur;
 	}				 
 	case OP_WB:
-		if(str == exp->_bol && !isspace(*str)
+		if((str == exp->_bol && !isspace(*str))
 		 || (str == exp->_eol && !isspace(*(str-1)))
 		 || (!isspace(*str) && isspace(*(str+1)))
 		 || (isspace(*str) && !isspace(*(str+1))) ) {
Index: src/squirrel/squirrel/sqfuncstate.cpp
===================================================================
--- src/squirrel/squirrel/sqfuncstate.cpp	(revision 5395)
+++ src/squirrel/squirrel/sqfuncstate.cpp	(working copy)
@@ -79,7 +79,7 @@ void DumpLiteral(SQObjectPtr &o)
 	switch(type(o)){
 		case OT_STRING:	scprintf(_SC("\"%s\""),_stringval(o));break;
 		case OT_FLOAT: scprintf(_SC("{%f}"),_float(o));break;
-		case OT_INTEGER: scprintf(_SC("{%d}"),_integer(o));break;
+		case OT_INTEGER: scprintf(_SC("{" _SC_INT_FMT "}"),_integer(o));break;
 		default: assert(0); break; //shut up compiler
 	}
 }
Index: src/squirrel/squirrel/sqapi.cpp
===================================================================
--- src/squirrel/squirrel/sqapi.cpp	(revision 5395)
+++ src/squirrel/squirrel/sqapi.cpp	(working copy)
@@ -774,7 +774,7 @@ SQRESULT sq_rawdeleteslot(HSQUIRRELVM v,SQInteger
 		_table(*self)->Remove(key);
 	}
 	if(pushval != 0)
-		if(pushval)	v->GetUp(-1) = t;
+		v->GetUp(-1) = t;
 	else
 		v->Pop(1);
 	return SQ_OK;
Index: src/squirrel/squirrel/sqcompiler.cpp
===================================================================
--- src/squirrel/squirrel/sqcompiler.cpp	(revision 5395)
+++ src/squirrel/squirrel/sqcompiler.cpp	(working copy)
@@ -778,7 +778,7 @@ class SQCompiler
 			SQInteger val = _fs->PopTarget();
 			SQInteger key = _fs->PopTarget();
 			SQInteger attrs = hasattrs ? _fs->PopTarget():-1;
-			assert(hasattrs && attrs == key-1 || !hasattrs);
+			assert((hasattrs && attrs == key-1) || !hasattrs);
 			unsigned char flags = (hasattrs?NEW_SLOT_ATTRIBUTES_FLAG:0)|(isstatic?NEW_SLOT_STATIC_FLAG:0);
 			SQInteger table = _fs->TopTarget(); //<<BECAUSE OF THIS NO COMMON EMIT FUNC IS POSSIBLE
 			_fs->AddInstruction(_OP_NEWSLOTA, flags, table, key, val);
Index: src/squirrel/squirrel/sqvm.cpp
===================================================================
--- src/squirrel/squirrel/sqvm.cpp	(revision 5395)
+++ src/squirrel/squirrel/sqvm.cpp	(working copy)
@@ -231,7 +231,7 @@ void SQVM::ToString(const SQObjectPtr &o,SQObjectP
 		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)),_SC("%g"),_float(o));
 		break;
 	case OT_INTEGER:
-		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)),_SC("%d"),_integer(o));
+		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)),_SC(_SC_INT_FMT),_integer(o));
 		break;
 	case OT_BOOL:
 		scsprintf(_sp(rsl(6)),_integer(o)?_SC("true"):_SC("false"));
@@ -645,7 +645,7 @@ bool SQVM::IsEqual(SQObjectPtr &o1,SQObjectPtr &o2
 
 bool SQVM::IsFalse(SQObjectPtr &o)
 {
-	if((type(o) & SQOBJECT_CANBEFALSE) && ( (type(o) == OT_FLOAT) && (_float(o) == SQFloat(0.0)) )
+	if(((type(o) & SQOBJECT_CANBEFALSE) && ( (type(o) == OT_FLOAT) && (_float(o) == SQFloat(0.0)) ))
 		|| (_integer(o) == 0) ) { //OT_NULL|OT_INTEGER|OT_BOOL
 		return true;
 	}
Index: src/squirrel/squirrel/sqdebug.cpp
===================================================================
--- src/squirrel/squirrel/sqdebug.cpp	(revision 5395)
+++ src/squirrel/squirrel/sqdebug.cpp	(working copy)
@@ -57,7 +57,7 @@ SQString *SQVM::PrintObjVal(const SQObject &o)
 	switch(type(o)) {
 	case OT_STRING: return _string(o);
 	case OT_INTEGER:
-		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)), _SC("%d"), _integer(o));
+		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)), _SC(_SC_INT_FMT), _integer(o));
 		return SQString::Create(_ss(this), _spval);
 		break;
 	case OT_FLOAT:
Index: src/lisp/lexer.cpp
===================================================================
--- src/lisp/lexer.cpp	(revision 5395)
+++ src/lisp/lexer.cpp	(working copy)
@@ -21,6 +21,7 @@
 #include <sstream>
 #include <stdexcept>
 #include <iostream>
+#include <string.h>
 
 #include "lexer.hpp"
 
Index: src/lisp/lisp.cpp
===================================================================
--- src/lisp/lisp.cpp	(revision 5395)
+++ src/lisp/lisp.cpp	(working copy)
@@ -18,6 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <config.h>
+#include <cstdio>
 
 #include "lisp.hpp"
 
Index: src/random_generator.cpp
===================================================================
--- src/random_generator.cpp	(revision 5395)
+++ src/random_generator.cpp	(working copy)
@@ -39,6 +39,7 @@
 #include <stdexcept>
 #include <time.h>
 #include <cassert>
+#include <cstdio>
 #include "random_generator.hpp"
 
 RandomGenerator systemRandom;               // global random number generator
Index: src/textscroller.hpp
===================================================================
--- src/textscroller.hpp	(revision 5395)
+++ src/textscroller.hpp	(working copy)
@@ -24,6 +24,7 @@
 #include <vector>
 #include <string>
 #include <map>
+#include <memory>
 
 #include "screen.hpp"
 #include "math/vector.hpp"
Index: src/title.cpp
===================================================================
--- src/title.cpp	(revision 5395)
+++ src/title.cpp	(working copy)
@@ -32,6 +32,7 @@
 #include <SDL.h>
 #include <SDL_image.h>
 #include <physfs.h>
+#include <algorithm>
 
 #include "title.hpp"
 #include "mainloop.hpp"
Index: src/sprite/sprite_manager.hpp
===================================================================
--- src/sprite/sprite_manager.hpp	(revision 5395)
+++ src/sprite/sprite_manager.hpp	(working copy)
@@ -21,6 +21,7 @@
 #define SUPERTUX_SPRITE_MANAGER_H
 
 #include <map>
+#include <string>
 
 class SpriteData;
 class Sprite;
